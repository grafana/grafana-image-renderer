name: Build plugin

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:

permissions: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        target:
          - linux-x64-glibc
          - darwin-x64-unknown
          - win32-x64-unknown
          # TODO: Support non-Chromium

    name: Build plugin for ${{ matrix.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: read # clone the repository
      id-token: write # required to read secrets
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - run: yarn install --frozen-lockfile
      - run: yarn run build

      - name: Package
        run: ./scripts/package_target.sh ${{ matrix.target }} false ${{ matrix.target }}/

      - name: Acquire Grafana API key
        id: grafana_api_key
        uses: grafana/shared-workflows/actions/get-vault-secrets@get-vault-secrets/v1
        with:
          repo_secrets: |
            GRAFANA_ACCESS_POLICY_TOKEN=gcom-token:token
      - name: Sign package
        run: yarn sign-plugin --distDir ./dist/${{ matrix.target }}/

      - name: Create ZIP
        working-directory: dist/
        run: zip -yqr ${{ matrix.target }}.zip ${{ matrix.target }}/
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}.zip
          path: dist/${{ matrix.target }}.zip

  release:
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    name: Release plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write # create a release
      id-token: write # required to read secrets
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
      - run: yarn install --frozen-lockfile
