version: 2

aliases:
  - &filter-not-release-or-master
    tags:
      ignore: /^v[0-9]+(\.[0-9]+){2}(-.+|[^-.]*)$/
    branches:
      ignore: master
  - &filter-only-master
    branches:
      only: master

defaults: &defaults
  working_directory: ~/grafana-image-renderer
  docker:
    - image: circleci/node:12.13.1-stretch

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Yarn Install
          command: 'yarn install --frozen-lockfile --no-progress'
      - save_cache:
          name: Save Yarn Package Cache
          key: dependency-cache-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: 'yarn build'
      - persist_to_workspace:
          root: .
          paths:
            - build/*

  package_linux_x64:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: 'yarn install --pure-lockfile --no-progress'
      - run:
          name: Package
          command: './scripts/package_target.sh linux-x64-glibc'
      - run:
          name: Archive
          command: './scripts/archive_target.sh linux-x64-glibc'
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
            - artifacts/*
      - store_artifacts:
          path: artifacts

  package_darwin_x64:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: 'yarn install --pure-lockfile --no-progress'
      - run:
          name: Package
          command: './scripts/package_target.sh darwin-x64-unknown'
      - run:
          name: Archive
          command: './scripts/archive_target.sh darwin-x64-unknown'
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
            - artifacts/*
      - store_artifacts:
          path: artifacts

  package_windows_x64:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: 'yarn install --pure-lockfile --no-progress'
      - run:
          name: Package
          command: './scripts/package_target.sh win32-x64-unknown'
      - run:
          name: Archive
          command: './scripts/archive_target.sh win32-x64-unknown'
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
            - artifacts/*
      - store_artifacts:
          path: artifacts

  package_linux_x64_no_chromium:
    <<: *defaults
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies
          command: 'yarn install --pure-lockfile --no-progress'
      - run:
          name: Package
          command: './scripts/package_target.sh linux-x64-glibc true plugin-linux-x64-glibc-no-chromium'
      - run:
          name: Archive
          command: './scripts/archive_target.sh linux-x64-glibc plugin-linux-x64-glibc-no-chromium'
      - persist_to_workspace:
          root: .
          paths:
            - dist/*
            - artifacts/*
      - store_artifacts:
          path: artifacts

  publish-github-release:
    working_directory: ~/grafana-image-renderer
    docker:
      - image: cibuilds/github:0.12
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "9a:40:f1:ad:ea:d5:c9:07:bd:54:dc:a8:0d:ea:be:0e"
      - attach_workspace:
          at: .
      - run:
          name: "Install dependencies"
          command: 'apk add --update --no-cache jq'
      - run:
          name: "Generate MD5 checksums"
          command: './scripts/generate_md5sum.sh'
      - run:
          name: "Publish Release on GitHub"
          command: './scripts/publish_github_release.sh'

  publish-docker-release:
    working_directory: ~/grafana-image-renderer
    environment:
      IMAGE_NAME: grafana/grafana-image-renderer
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - setup_remote_docker
      - run: |
          TAG=$(git describe --tags --abbrev=0 | cut -d "v" -f 2)
          echo "building ${TAG}"
          docker build -t ${IMAGE_NAME}:${TAG} .
          docker tag ${IMAGE_NAME}:${TAG} ${IMAGE_NAME}:latest
          echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
          docker push ${IMAGE_NAME}:${TAG}
          docker push ${IMAGE_NAME}:latest

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters: *filter-only-master
      - package_linux_x64:
          requires:
            - build
          filters: *filter-only-master
      - package_darwin_x64:
          requires:
            - build
          filters: *filter-only-master
      - package_windows_x64:
          requires:
            - build
          filters: *filter-only-master
      - package_linux_x64_no_chromium:
          requires:
            - build
          filters: *filter-only-master
      - approve-release:
          type: approval
          requires:
            - build
            - package_linux_x64
            - package_darwin_x64
            - package_windows_x64
            - package_linux_x64_no_chromium
          filters: *filter-only-master
      - publish-github-release:
          requires:
            - approve-release
          filters: *filter-only-master
      - publish-docker-release:
          requires:
            - publish-github-release
          filters: *filter-only-master

  build-branches-and-prs:
    jobs:
      - build:
          filters: *filter-not-release-or-master